<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Derek&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-28T11:01:15.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Derek</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bytom源码分析-P2P网络-地址簿</title>
    <link href="http://yoursite.com/2018/04/28/bytom%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-P2P%E7%BD%91%E7%BB%9C-%E5%9C%B0%E5%9D%80%E7%B0%BF/"/>
    <id>http://yoursite.com/2018/04/28/bytom源码分析-P2P网络-地址簿/</id>
    <published>2018-04-28T10:58:07.000Z</published>
    <updated>2018-04-28T11:01:15.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;bytom源码分析-P2P网络-地址簿&quot;&gt;&lt;a href=&quot;#bytom源码分析-P2P网络-地址簿&quot; class=&quot;headerlink&quot; title=&quot;bytom源码分析-P2P网络-地址簿&quot;&gt;&lt;/a&gt;bytom源码分析-P2P网络-地址簿&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Bytom/bytom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Bytom/bytom&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本章介绍bytom代码P2P网络中addrbook地址簿&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者使用MacOS操作系统，其他平台也大同小异&lt;/p&gt;
&lt;p&gt;Golang Version: 1.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;addrbook介绍&quot;&gt;&lt;a href=&quot;#addrbook介绍&quot; class=&quot;headerlink&quot; title=&quot;addrbook介绍&quot;&gt;&lt;/a&gt;addrbook介绍&lt;/h2&gt;&lt;p&gt;addrbook用于存储P2P网络中保留最近的对端节点地址&lt;br&gt;在MacOS下，默认的地址簿路径存储在~/Library/Bytom/addrbook.json&lt;/p&gt;
&lt;h2 id=&quot;地址类型&quot;&gt;&lt;a href=&quot;#地址类型&quot; class=&quot;headerlink&quot; title=&quot;地址类型&quot;&gt;&lt;/a&gt;地址类型&lt;/h2&gt;&lt;p&gt;在addrbook中存储的地址有两种：&lt;br&gt;&lt;strong&gt; p2p/addrbook.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;const (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bucketTypeNew = 0x01  // 标识新地址，只存储在一个bucket中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bucketTypeOld = 0x02  // 标识旧地址，可以存储在多个bucket中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;font color=&quot;red&quot;&gt;注意: 一个地址的类型变更不在此文章中做介绍，后期的文章会讨论该问题&lt;/font&gt;

&lt;h2 id=&quot;地址簿结构体&quot;&gt;&lt;a href=&quot;#地址簿结构体&quot; class=&quot;headerlink&quot; title=&quot;地址簿结构体&quot;&gt;&lt;/a&gt;地址簿结构体&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;type AddrBook struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cmn.BaseService&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mtx               sync.Mutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	filePath          string  // 地址簿路径&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	routabilityStrict bool  // 是否可路由，默认为true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	rand              *rand.Rand &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	key               string  // 地址簿标识&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ourAddrs          map[string]*NetAddress  // 存储本地网络地址，用于添加p2p地址时做排除使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	addrLookup        map[string]*knownAddress // 新/旧地址都存储，用于查询&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	addrNew           []map[string]*knownAddress // 存储新地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	addrOld           []map[string]*knownAddress // 存储旧地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	wg                sync.WaitGroup&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nOld              int // 旧地址数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	nNew              int // 新地址数量&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;routabilityStrict参数表示地址簿是否存储的ip是否可路由。可路由是根据RFC划分，具体参考资料：&lt;a href=&quot;https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RFC标准&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;初始化地址簿&quot;&gt;&lt;a href=&quot;#初始化地址簿&quot; class=&quot;headerlink&quot; title=&quot;初始化地址簿&quot;&gt;&lt;/a&gt;初始化地址簿&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// NewAddrBook creates a new address book.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Use Start to begin processing asynchronous address updates.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func NewAddrBook(filePath string, routabilityStrict bool) *AddrBook &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	am := &amp;amp;AddrBook&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		rand:              rand.New(rand.NewSource(time.Now().UnixNano())),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		ourAddrs:          make(map[string]*NetAddress),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		addrLookup:        make(map[string]*knownAddress),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		filePath:          filePath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		routabilityStrict: routabilityStrict,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	am.init()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	am.BaseService = *cmn.NewBaseService(nil, &amp;quot;AddrBook&amp;quot;, am)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return am&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// When modifying this, don&amp;apos;t forget to update loadFromFile()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (a *AddrBook) init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 地址簿唯一标识&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.key = crypto.CRandHex(24) // 24/2 * 8 = 96 bits&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// New addr buckets， 默认为256个大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.addrNew = make([]map[string]*knownAddress, newBucketCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i := range a.addrNew &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.addrNew[i] = make(map[string]*knownAddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Old addr buckets，默认为64个大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.addrOld = make([]map[string]*knownAddress, oldBucketCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i := range a.addrOld &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.addrOld[i] = make(map[string]*knownAddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;bytomd启动时加载本地地址簿&quot;&gt;&lt;a href=&quot;#bytomd启动时加载本地地址簿&quot; class=&quot;headerlink&quot; title=&quot;bytomd启动时加载本地地址簿&quot;&gt;&lt;/a&gt;bytomd启动时加载本地地址簿&lt;/h2&gt;&lt;p&gt;loadFromFile在bytomd启动时，首先会加载本地的地址簿&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// OnStart implements Service.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (a *AddrBook) OnStart() error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.BaseService.OnStart()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.loadFromFile(a.filePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.wg.Add(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	go a.saveRoutine()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Returns false if file does not exist.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// cmn.Panics if file is corrupt.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (a *AddrBook) loadFromFile(filePath string) bool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// If doesn&amp;apos;t exist, do nothing.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 如果本地地址簿不存在则直接返回&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	_, err := os.Stat(filePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if os.IsNotExist(err) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 加载地址簿json内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Load addrBookJSON&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	r, err := os.Open(filePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmn.PanicCrisis(cmn.Fmt(&amp;quot;Error opening file %s: %v&amp;quot;, filePath, err))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	defer r.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	aJSON := &amp;amp;addrBookJSON&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dec := json.NewDecoder(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	err = dec.Decode(aJSON)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmn.PanicCrisis(cmn.Fmt(&amp;quot;Error reading file %s: %v&amp;quot;, filePath, err))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Restore all the fields...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Restore the key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.key = aJSON.Key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Restore .addrNew &amp;amp; .addrOld&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for _, ka := range aJSON.Addrs &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for _, bucketIndex := range ka.Buckets &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bucket := a.getBucket(ka.BucketType, bucketIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			bucket[ka.Addr.String()] = ka&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.addrLookup[ka.Addr.String()] = ka&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if ka.BucketType == bucketTypeNew &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			a.nNew++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			a.nOld++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;定时更新地址簿&quot;&gt;&lt;a href=&quot;#定时更新地址簿&quot; class=&quot;headerlink&quot; title=&quot;定时更新地址簿&quot;&gt;&lt;/a&gt;定时更新地址簿&lt;/h2&gt;&lt;p&gt;bytomd会定时更新本地地址簿，默认2分钟一次&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func (a *AddrBook) saveRoutine() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dumpAddressTicker := time.NewTicker(dumpAddressInterval)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;out:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		select &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		case &amp;lt;-dumpAddressTicker.C:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			a.saveToFile(a.filePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		case &amp;lt;-a.Quit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			break out&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	dumpAddressTicker.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.saveToFile(a.filePath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.wg.Done()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	log.Info(&amp;quot;Address handler done&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (a *AddrBook) saveToFile(filePath string) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	log.WithField(&amp;quot;size&amp;quot;, a.Size()).Info(&amp;quot;Saving AddrBook to file&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	a.mtx.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	defer a.mtx.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Compile Addrs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	addrs := []*knownAddress&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for _, ka := range a.addrLookup &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		addrs = append(addrs, ka)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	aJSON := &amp;amp;addrBookJSON&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Key:   a.key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Addrs: addrs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	jsonBytes, err := json.MarshalIndent(aJSON, &amp;quot;&amp;quot;, &amp;quot;\t&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.WithField(&amp;quot;err&amp;quot;, err).Error(&amp;quot;Failed to save AddrBook to file&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	err = cmn.WriteFileAtomic(filePath, jsonBytes, 0644)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.WithFields(log.Fields&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;file&amp;quot;: filePath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;err&amp;quot;:  err,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;).Error(&amp;quot;Failed to save AddrBook to file&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;待更新。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bytom源码分析-P2P网络-地址簿&quot;&gt;&lt;a href=&quot;#bytom源码分析-P2P网络-地址簿&quot; class=&quot;headerlink&quot; title=&quot;bytom源码分析-P2P网络-地址簿&quot;&gt;&lt;/a&gt;bytom源码分析-P2P网络-地址簿&lt;/h1&gt;&lt;h2 i
    
    </summary>
    
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
      <category term="bytom" scheme="http://yoursite.com/tags/bytom/"/>
    
  </entry>
  
  <entry>
    <title>bytom源码分析-P2P网络-upnp端口映射</title>
    <link href="http://yoursite.com/2018/04/28/bytom%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-P2P%E7%BD%91%E7%BB%9C-upnp%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/"/>
    <id>http://yoursite.com/2018/04/28/bytom源码分析-P2P网络-upnp端口映射/</id>
    <published>2018-04-28T08:03:38.000Z</published>
    <updated>2018-04-28T08:46:30.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;bytom源码分析-P2P网络-upnp端口映射&quot;&gt;&lt;a href=&quot;#bytom源码分析-P2P网络-upnp端口映射&quot; class=&quot;headerlink&quot; title=&quot;bytom源码分析-P2P网络-upnp端口映射&quot;&gt;&lt;/a&gt;bytom源码分析-P2P网络-upnp端口映射&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Bytom/bytom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Bytom/bytom&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本章介绍bytom代码P2P网络中upnp端口映射&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者使用MacOS操作系统，其他平台也大同小异&lt;/p&gt;
&lt;p&gt;Golang Version: 1.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;UPNP介绍&quot;&gt;&lt;a href=&quot;#UPNP介绍&quot; class=&quot;headerlink&quot; title=&quot;UPNP介绍&quot;&gt;&lt;/a&gt;UPNP介绍&lt;/h2&gt;&lt;p&gt;UPNP（Universal Plug and Play）通用即插即用。UPNP端口映射将一个外部端口映射到一个内网ip:port。从而实现p2p网络从外网能够穿透网关访问到内网的bytomd节点。&lt;/p&gt;
&lt;h2 id=&quot;UPNP协议&quot;&gt;&lt;a href=&quot;#UPNP协议&quot; class=&quot;headerlink&quot; title=&quot;UPNP协议&quot;&gt;&lt;/a&gt;UPNP协议&lt;/h2&gt;&lt;p&gt;SSDP（Simple Service Discovery Protocol 简单服务发现协议）&lt;br&gt;GENA（Generic Event Notification Architecture 通用事件通知结构）&lt;br&gt;SOAP（Simple Object Access Protocol 简单对象访问协议）&lt;br&gt;XML（Extensible Markup Language 可扩张标记语言）&lt;/p&gt;
&lt;h2 id=&quot;UPNP代码&quot;&gt;&lt;a href=&quot;#UPNP代码&quot; class=&quot;headerlink&quot; title=&quot;UPNP代码&quot;&gt;&lt;/a&gt;UPNP代码&lt;/h2&gt;&lt;p&gt;&lt;strong&gt; p2p/upnp/upnp.go &lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;发现网络中支持UPNP功能的设备&quot;&gt;&lt;a href=&quot;#发现网络中支持UPNP功能的设备&quot; class=&quot;headerlink&quot; title=&quot;发现网络中支持UPNP功能的设备&quot;&gt;&lt;/a&gt;发现网络中支持UPNP功能的设备&lt;/h3&gt;&lt;p&gt;从网络中发现支持UPNP功能的设备，并得到该设备的location和url等相关信息&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;type upnpNAT struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	serviceURL string // 设备的描述文件URL，用于得到该设备的描述信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ourIP      string // 节点本地ip地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	urnDomain  string // 设备类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func Discover() (nat NAT, err error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ssdp, err := net.ResolveUDPAddr(&amp;quot;udp4&amp;quot;, &amp;quot;239.255.255.250:1900&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	conn, err := net.ListenPacket(&amp;quot;udp4&amp;quot;, &amp;quot;:0&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	socket := conn.(*net.UDPConn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	defer socket.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	err = socket.SetDeadline(time.Now().Add(3 * time.Second))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	st := &amp;quot;InternetGatewayDevice:1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// 多播请求：M-SEARCH SSDP协议定义的发现请求。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	buf := bytes.NewBufferString(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;M-SEARCH * HTTP/1.1\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;HOST: 239.255.255.250:1900\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;ST: ssdp:all\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;MAN: \&amp;quot;ssdp:discover\&amp;quot;\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;quot;MX: 2\r\n\r\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message := buf.Bytes()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	answerBytes := make([]byte, 1024)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	for i := 0; i &amp;lt; 3; i++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 向239.255.255.250:1900发送一条多播请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		_, err = socket.WriteToUDP(message, ssdp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// 如果从网络中发现UPNP设备则会从239.255.255.250:1900收到响应消息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var n int&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		n, _, err = socket.ReadFromUDP(answerBytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			n, _, err = socket.ReadFromUDP(answerBytes)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			answer := string(answerBytes[0:n])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if strings.Index(answer, st) &amp;lt; 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// HTTP header field names are case-insensitive.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 获得设备location&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			locString := &amp;quot;\r\nlocation:&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			answer = strings.ToLower(answer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			locIndex := strings.Index(answer, locString)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if locIndex &amp;lt; 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			loc := answer[locIndex+len(locString):]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			endIndex := strings.Index(loc, &amp;quot;\r\n&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if endIndex &amp;lt; 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			// 获得设备的描述url和设备类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			locURL := strings.TrimSpace(loc[0:endIndex])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			var serviceURL, urnDomain string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			serviceURL, urnDomain, err = getServiceURL(locURL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			var ourIP net.IP&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			ourIP, err = localIPv4()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			nat = &amp;amp;upnpNAT&amp;#123;serviceURL: serviceURL, ourIP: ourIP.String(), urnDomain: urnDomain&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	err = errors.New(&amp;quot;UPnP port discovery failed.&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加端口映射&quot;&gt;&lt;a href=&quot;#添加端口映射&quot; class=&quot;headerlink&quot; title=&quot;添加端口映射&quot;&gt;&lt;/a&gt;添加端口映射&lt;/h3&gt;&lt;p&gt;向upnp设备发送一条http post请求，将内部网络ip:port和外部网络ip:port做映射&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func (n *upnpNAT) AddPortMapping(protocol string, externalPort, internalPort int, description string, timeout int) (mappedExternalPort int, err error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// A single concatenation would break ARM compilation.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message := &amp;quot;&amp;lt;u:AddPortMapping xmlns:u=\&amp;quot;urn:&amp;quot; + n.urnDomain + &amp;quot;:service:WANIPConnection:1\&amp;quot;&amp;gt;\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;NewRemoteHost&amp;gt;&amp;lt;/NewRemoteHost&amp;gt;&amp;lt;NewExternalPort&amp;gt;&amp;quot; + strconv.Itoa(externalPort)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message += &amp;quot;&amp;lt;/NewExternalPort&amp;gt;&amp;lt;NewProtocol&amp;gt;&amp;quot; + protocol + &amp;quot;&amp;lt;/NewProtocol&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message += &amp;quot;&amp;lt;NewInternalPort&amp;gt;&amp;quot; + strconv.Itoa(internalPort) + &amp;quot;&amp;lt;/NewInternalPort&amp;gt;&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;NewInternalClient&amp;gt;&amp;quot; + n.ourIP + &amp;quot;&amp;lt;/NewInternalClient&amp;gt;&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;NewEnabled&amp;gt;1&amp;lt;/NewEnabled&amp;gt;&amp;lt;NewPortMappingDescription&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message += description +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;/NewPortMappingDescription&amp;gt;&amp;lt;NewLeaseDuration&amp;gt;&amp;quot; + strconv.Itoa(timeout) +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;/NewLeaseDuration&amp;gt;&amp;lt;/u:AddPortMapping&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var response *http.Response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	response, err = soapRequest(n.serviceURL, &amp;quot;AddPortMapping&amp;quot;, message, n.urnDomain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if response != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		defer response.Body.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// TODO: check response to see if the port was forwarded&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// log.Println(message, response)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// JAE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// body, err := ioutil.ReadAll(response.Body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// fmt.Println(string(body), err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mappedExternalPort = externalPort&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	_ = response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;删除端口映射&quot;&gt;&lt;a href=&quot;#删除端口映射&quot; class=&quot;headerlink&quot; title=&quot;删除端口映射&quot;&gt;&lt;/a&gt;删除端口映射&lt;/h3&gt;&lt;p&gt;向upnp设备发送一条http post请求，将内部网络ip:port和外部网络ip:port删除映射关系&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func (n *upnpNAT) DeletePortMapping(protocol string, externalPort, internalPort int) (err error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message := &amp;quot;&amp;lt;u:DeletePortMapping xmlns:u=\&amp;quot;urn:&amp;quot; + n.urnDomain + &amp;quot;:service:WANIPConnection:1\&amp;quot;&amp;gt;\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;NewRemoteHost&amp;gt;&amp;lt;/NewRemoteHost&amp;gt;&amp;lt;NewExternalPort&amp;gt;&amp;quot; + strconv.Itoa(externalPort) +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;/NewExternalPort&amp;gt;&amp;lt;NewProtocol&amp;gt;&amp;quot; + protocol + &amp;quot;&amp;lt;/NewProtocol&amp;gt;&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;/u:DeletePortMapping&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var response *http.Response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	response, err = soapRequest(n.serviceURL, &amp;quot;DeletePortMapping&amp;quot;, message, n.urnDomain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if response != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		defer response.Body.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// TODO: check response to see if the port was deleted&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// log.Println(message, response)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	_ = response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取映射后的公网地址&quot;&gt;&lt;a href=&quot;#获取映射后的公网地址&quot; class=&quot;headerlink&quot; title=&quot;获取映射后的公网地址&quot;&gt;&lt;/a&gt;获取映射后的公网地址&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func (n *upnpNAT) GetExternalAddress() (addr net.IP, err error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info, err := n.getExternalIPAddress()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	addr = net.ParseIP(info.externalIpAddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (n *upnpNAT) getExternalIPAddress() (info statusInfo, err error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	message := &amp;quot;&amp;lt;u:GetExternalIPAddress xmlns:u=\&amp;quot;urn:&amp;quot; + n.urnDomain + &amp;quot;:service:WANIPConnection:1\&amp;quot;&amp;gt;\r\n&amp;quot; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;quot;&amp;lt;/u:GetExternalIPAddress&amp;gt;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var response *http.Response&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	response, err = soapRequest(n.serviceURL, &amp;quot;GetExternalIPAddress&amp;quot;, message, n.urnDomain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if response != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		defer response.Body.Close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var envelope Envelope&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	data, err := ioutil.ReadAll(response.Body)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	reader := bytes.NewReader(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	xml.NewDecoder(reader).Decode(&amp;amp;envelope)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	info = statusInfo&amp;#123;envelope.Soap.ExternalIP.IPAddress&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bytom源码分析-P2P网络-upnp端口映射&quot;&gt;&lt;a href=&quot;#bytom源码分析-P2P网络-upnp端口映射&quot; class=&quot;headerlink&quot; title=&quot;bytom源码分析-P2P网络-upnp端口映射&quot;&gt;&lt;/a&gt;bytom源码分析-P2P网
    
    </summary>
    
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
      <category term="bytom" scheme="http://yoursite.com/tags/bytom/"/>
    
  </entry>
  
  <entry>
    <title>bytom源码分析-启动与停止</title>
    <link href="http://yoursite.com/2018/04/21/bytom%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%81%9C%E6%AD%A2/"/>
    <id>http://yoursite.com/2018/04/21/bytom源码分析-启动与停止/</id>
    <published>2018-04-21T04:25:42.000Z</published>
    <updated>2018-04-28T08:46:04.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;bytom源码分析-启动与停止&quot;&gt;&lt;a href=&quot;#bytom源码分析-启动与停止&quot; class=&quot;headerlink&quot; title=&quot;bytom源码分析-启动与停止&quot;&gt;&lt;/a&gt;bytom源码分析-启动与停止&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Bytom/bytom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Bytom/bytom&lt;/a&gt;&lt;br&gt;本章介绍bytom代码启动、节点初始化、及停止的过程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;作者使用MacOS操作系统，其他平台也大同小异&lt;br&gt;Golang Version: 1.8&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;预备工作&quot;&gt;&lt;a href=&quot;#预备工作&quot; class=&quot;headerlink&quot; title=&quot;预备工作&quot;&gt;&lt;/a&gt;预备工作&lt;/h2&gt;&lt;h3 id=&quot;编译安装&quot;&gt;&lt;a href=&quot;#编译安装&quot; class=&quot;headerlink&quot; title=&quot;编译安装&quot;&gt;&lt;/a&gt;编译安装&lt;/h3&gt;&lt;p&gt;  详细步骤见官方 &lt;a href=&quot;https://github.com/Bytom/bytom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bytom install&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;设置debug日志输出&quot;&gt;&lt;a href=&quot;#设置debug日志输出&quot; class=&quot;headerlink&quot; title=&quot;设置debug日志输出&quot;&gt;&lt;/a&gt;设置debug日志输出&lt;/h3&gt;&lt;p&gt;开启debug输出文件、函数、行号等详细信息&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export BYTOM_DEBUG=debug&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;初始化并启动bytomd&quot;&gt;&lt;a href=&quot;#初始化并启动bytomd&quot; class=&quot;headerlink&quot; title=&quot;初始化并启动bytomd&quot;&gt;&lt;/a&gt;初始化并启动bytomd&lt;/h3&gt;&lt;p&gt;初始化&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bytomd init --chain_id testnet&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;bytomd目前支持两种网络，这里我们使用测试网&lt;br&gt;mainnet：主网&lt;br&gt;testnet：测试网&lt;/p&gt;
&lt;p&gt;启动bytomd&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bytomd node --mining --prof_laddr=&amp;quot;:8011&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;–prof_laddr=”:8080”  // 开启pprof输出性能指标&lt;br&gt;访问：&lt;a href=&quot;http://127.0.0.1:8080/debug/pprof/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:8080/debug/pprof/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;bytomd-init初始化&quot;&gt;&lt;a href=&quot;#bytomd-init初始化&quot; class=&quot;headerlink&quot; title=&quot;bytomd init初始化&quot;&gt;&lt;/a&gt;bytomd init初始化&lt;/h2&gt;&lt;p&gt;入口函数&lt;br&gt;&lt;strong&gt; cmd/bytomd/main.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func init() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	log.SetFormatter(&amp;amp;log.TextFormatter&amp;#123;FullTimestamp: true, DisableColors: true&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// If environment variable BYTOM_DEBUG is not empty,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// then add the hook to logrus and set the log level to DEBUG&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if os.Getenv(&amp;quot;BYTOM_DEBUG&amp;quot;) != &amp;quot;&amp;quot; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.AddHook(ContextHook&amp;#123;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.SetLevel(log.DebugLevel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cmd := cli.PrepareBaseCmd(commands.RootCmd, &amp;quot;TM&amp;quot;, os.ExpandEnv(config.DefaultDataDir()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cmd.Execute()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;init函数会在main执行之前做初始化操作，可以看到init中bytomd加载BYTOM_DEBUG变量来设置debug日志输出&lt;/p&gt;
&lt;p&gt;command cli传参初始化&lt;br&gt;bytomd的cli解析使用&lt;a href=&quot;https://github.com/spf13/cobra&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cobra&lt;/a&gt;库&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; cmd/bytomd/commands &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cmd/bytomd/commands/root.go&lt;br&gt;初始化–root传参。bytomd存储配置、keystore、数据的root目录。在MacOS下，默认路径是~/Library/Bytom/&lt;/li&gt;
&lt;li&gt;cmd/bytomd/commands/init.go&lt;br&gt;初始化–chain_id传参。选择网络类型，在启动bytomd时我们选择了testnet也就是测试网络&lt;/li&gt;
&lt;li&gt;cmd/bytomd/commands/version.go&lt;br&gt;初始化version传参&lt;/li&gt;
&lt;li&gt;cmd/bytomd/commands/run_node.go&lt;br&gt;初始化node节点运行时所需要的传参&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;初始化默认配置&lt;br&gt;用户传参只有一部分参数，那节点所需的其他参数需要从默认配置中加载。&lt;br&gt;&lt;strong&gt; cmd/bytomd/commands/root.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	config = cfg.DefaultConfig()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在root.go中有一个config全局变量加载了node所需的所有默认参数&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Default configurable parameters.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func DefaultConfig() *Config &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;amp;Config&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		BaseConfig: DefaultBaseConfig(),  // node基础相关配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		P2P:        DefaultP2PConfig(),   // p2p网络相关配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Wallet:     DefaultWalletConfig(),   // 钱包相关配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Auth:       DefaultRPCAuthConfig(),  // 验证相关配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		Web:        DefaultWebConfig(),   // web相关配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;后面的文章会一一介绍每个配置的作用&lt;/p&gt;
&lt;h2 id=&quot;bytomd-守护进程启动与退出&quot;&gt;&lt;a href=&quot;#bytomd-守护进程启动与退出&quot; class=&quot;headerlink&quot; title=&quot;bytomd 守护进程启动与退出&quot;&gt;&lt;/a&gt;bytomd 守护进程启动与退出&lt;/h2&gt;&lt;p&gt;&lt;strong&gt; cmd/bytomd/commands/run_node.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func runNode(cmd *cobra.Command, args []string) error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Create &amp;amp; start node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n := node.NewNode(config)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if _, err := n.Start(); err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return fmt.Errorf(&amp;quot;Failed to start node: %v&amp;quot;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.WithField(&amp;quot;nodeInfo&amp;quot;, n.SyncManager().Switch().NodeInfo()).Info(&amp;quot;Started node&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Trap signal, run forever.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.RunForever()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;runNode函数有三步操作：&lt;br&gt;node.NewNode：初始化node运行环境&lt;br&gt;n.Start：启动node&lt;br&gt;n.RunForever：监听退出信号，收到ctrl+c操作则退出node。在linux中守进程一般监听SIGTERM信号(ctrl+c)作为退出守护进程的信号&lt;/p&gt;
&lt;h3 id=&quot;初始化node运行环境&quot;&gt;&lt;a href=&quot;#初始化node运行环境&quot; class=&quot;headerlink&quot; title=&quot;初始化node运行环境&quot;&gt;&lt;/a&gt;初始化node运行环境&lt;/h3&gt;&lt;p&gt;在bytomd中有五个db数据库存储在–root参数下的data目录&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;accesstoken.db    // 存储token相关信息(钱包访问控制权限)&lt;/li&gt;
&lt;li&gt;trusthistory.db   // 存储p2p网络同步相关信息&lt;/li&gt;
&lt;li&gt;txdb.db           // 存储交易相关信息&lt;/li&gt;
&lt;li&gt;txfeeds.db        // &lt;/li&gt;
&lt;li&gt;wallet.db         // 存储钱包相关信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; node/node.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func NewNode(config *cfg.Config) *Node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ctx := context.Background()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	initActiveNetParams(config)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Get store 初始化txdb数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	txDB := dbm.NewDB(&amp;quot;txdb&amp;quot;, config.DBBackend, config.DBDir())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	store := leveldb.NewStore(txDB)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化accesstoken数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	tokenDB := dbm.NewDB(&amp;quot;accesstoken&amp;quot;, config.DBBackend, config.DBDir())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	accessTokens := accesstoken.NewStore(tokenDB)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化event事件调度器，也叫任务调度器。一个任务可以被多次调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// Make event switch&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	eventSwitch := types.NewEventSwitch()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	_, err := eventSwitch.Start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmn.Exit(cmn.Fmt(&amp;quot;Failed to start switch: %v&amp;quot;, err))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化交易池&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	txPool := protocol.NewTxPool()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	chain, err := protocol.NewChain(store, txPool)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmn.Exit(cmn.Fmt(&amp;quot;Failed to create chain structure: %v&amp;quot;, err))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var accounts *account.Manager = nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var assets *asset.Registry = nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var wallet *w.Wallet = nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var txFeed *txfeed.Tracker = nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化txfeeds数据库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	txFeedDB := dbm.NewDB(&amp;quot;txfeeds&amp;quot;, config.DBBackend, config.DBDir())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	txFeed = txfeed.NewTracker(txFeedDB, chain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err = txFeed.Prepare(ctx); err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.WithField(&amp;quot;error&amp;quot;, err).Error(&amp;quot;start txfeed&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化keystore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hsm, err := pseudohsm.New(config.KeysDir())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		cmn.Exit(cmn.Fmt(&amp;quot;initialize HSM failed: %v&amp;quot;, err))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化钱包，默认wallet是开启状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if !config.Wallet.Disable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		walletDB := dbm.NewDB(&amp;quot;wallet&amp;quot;, config.DBBackend, config.DBDir())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		accounts = account.NewManager(walletDB, chain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		assets = asset.NewRegistry(walletDB, chain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wallet, err = w.NewWallet(walletDB, accounts, assets, hsm, chain)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			log.WithField(&amp;quot;error&amp;quot;, err).Error(&amp;quot;init NewWallet&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// Clean up expired UTXO reservations periodically.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		go accounts.ExpireReservations(ctx, expireReservationsPeriod)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	newBlockCh := make(chan *bc.Hash, maxNewBlockChSize)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化网络节点同步管理&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	syncManager, _ := netsync.NewSyncManager(config, chain, txPool, newBlockCh)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化pprof，pprof用于输出性能指标，需要制定--prof_laddr参数来开启，在文章开头我们已经开启该功能&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// run the profile server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	profileHost := config.ProfListenAddress&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if profileHost != &amp;quot;&amp;quot; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// Profiling bytomd programs.see (https://blog.golang.org/profiling-go-programs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		// go tool pprof http://profileHose/debug/pprof/heap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		go func() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			http.ListenAndServe(profileHost, nil)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化节点，填充节点所需的所有参数环境&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	node := &amp;amp;Node&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		config:       config,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		syncManager:  syncManager,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		evsw:         eventSwitch,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		accessTokens: accessTokens,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		wallet:       wallet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		chain:        chain,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		txfeed:       txFeed,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		miningEnable: config.Mining,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 初始化挖矿&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	node.cpuMiner = cpuminer.NewCPUMiner(chain, accounts, txPool, newBlockCh)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	node.miningPool = miningpool.NewMiningPool(chain, accounts, txPool, newBlockCh)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	node.BaseService = *cmn.NewBaseService(nil, &amp;quot;Node&amp;quot;, node)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return node&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;目前bytomd只支持cpu挖矿，所以在代码中只有cpuminer的初始化信息&lt;/p&gt;
&lt;h3 id=&quot;启动node&quot;&gt;&lt;a href=&quot;#启动node&quot; class=&quot;headerlink&quot; title=&quot;启动node&quot;&gt;&lt;/a&gt;启动node&lt;/h3&gt;&lt;p&gt;&lt;strong&gt; node/node.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Lanch web broser or not&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func lanchWebBroser() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	log.Info(&amp;quot;Launching System Browser with :&amp;quot;, webAddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if err := browser.Open(webAddress); err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		log.Error(err.Error())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (n *Node) initAndstartApiServer() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.api = api.NewAPI(n.syncManager, n.wallet, n.txfeed, n.cpuMiner, n.miningPool, n.chain, n.config, n.accessTokens)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	listenAddr := env.String(&amp;quot;LISTEN&amp;quot;, n.config.ApiAddress)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	env.Parse()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.api.StartServer(*listenAddr)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (n *Node) OnStart() error &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if n.miningEnable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		n.cpuMiner.Start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.syncManager.Start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.initAndstartApiServer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if !n.config.Web.Closed &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		lanchWebBroser()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;OnStart() 启动node进程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;启动挖矿功能&lt;/li&gt;
&lt;li&gt;启动p2p网络同步&lt;/li&gt;
&lt;li&gt;启动http协议的apiserver服务&lt;/li&gt;
&lt;li&gt;打开浏览器访问bytond的交易页面&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;停止node&quot;&gt;&lt;a href=&quot;#停止node&quot; class=&quot;headerlink&quot; title=&quot;停止node&quot;&gt;&lt;/a&gt;停止node&lt;/h3&gt;&lt;p&gt;bytomd在启动时执行了n.RunForever()函数，该函数是由tendermint框架启动了监听信号的功能：&lt;br&gt;&lt;strong&gt; vendor/github.com/tendermint/tmlibs/common/os.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func TrapSignal(cb func()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c := make(chan os.Signal, 1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	signal.Notify(c, os.Interrupt, syscall.SIGTERM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	go func() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		for sig := range c &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			fmt.Printf(&amp;quot;captured %v, exiting...\n&amp;quot;, sig)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			if cb != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				cb()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			os.Exit(1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	select &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;TrapSignal函数监听了SIGTERM信号，bytomd才能成为不退出的守护进程。只有当触发了ctrl+c或kill bytomd_pid才能终止bytomd进程退出。退出时bytomd执行如下操作&lt;br&gt;&lt;strong&gt; node/node.go &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;func (n *Node) OnStop() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.BaseService.OnStop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	if n.miningEnable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		n.cpuMiner.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	n.syncManager.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	log.Info(&amp;quot;Stopping Node&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	// TODO: gracefully disconnect from peers.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;bytomd会将挖矿功能停止，p2p网络停止等操作。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;bytom源码分析-启动与停止&quot;&gt;&lt;a href=&quot;#bytom源码分析-启动与停止&quot; class=&quot;headerlink&quot; title=&quot;bytom源码分析-启动与停止&quot;&gt;&lt;/a&gt;bytom源码分析-启动与停止&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;
    
    </summary>
    
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
      <category term="bytom" scheme="http://yoursite.com/tags/bytom/"/>
    
  </entry>
  
  <entry>
    <title>Hexo</title>
    <link href="http://yoursite.com/2016/05/24/hexo/"/>
    <id>http://yoursite.com/2016/05/24/hexo/</id>
    <published>2016-05-24T12:23:06.000Z</published>
    <updated>2016-05-24T12:23:06.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cache2go源码分析(一):cache2go应用场景</title>
    <link href="http://yoursite.com/2016/04/28/cache2go%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90(%E4%B8%80):cache2go%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>http://yoursite.com/2016/04/28/cache2go源码分析(一):cache2go应用场景/</id>
    <published>2016-04-28T10:00:46.000Z</published>
    <updated>2016-05-24T10:31:12.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;h3 id=&quot;cache2go介绍&quot;&gt;&lt;a href=&quot;#cache2go介绍&quot; class=&quot;headerlink&quot; title=&quot;cache2go介绍&quot;&gt;&lt;/a&gt;cache2go介绍&lt;/h3&gt;&lt;p&gt;cache2go是golang的一个对象缓存库，可设置对象的缓存周期&lt;/p&gt;
&lt;h3 id=&quot;cache2go官方案例&quot;&gt;&lt;a href=&quot;#cache2go官方案例&quot; class=&quot;headerlink&quot; title=&quot;cache2go官方案例&quot;&gt;&lt;/a&gt;cache2go官方案例&lt;/h3&gt;&lt;p&gt;下载cache2go&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;go get github.com/muesli/cache2go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd cache2go &amp;amp;&amp;amp; go build &amp;amp;&amp;amp; go test -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;package main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;github.com/muesli/cache2go&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;fmt&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;quot;time&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type myStruct struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    text     string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    moreData []byte&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func main() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 创建cache缓存对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache := cache2go.Cache(&amp;quot;myCache&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 实例化val，将val存至cache缓存中，缓存对象的key为someKey，缓存周期为5秒(5秒过后缓存对象失效)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    val := myStruct&amp;#123;&amp;quot;This is a test!&amp;quot;, []byte&amp;#123;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache.Add(&amp;quot;someKey&amp;quot;, 5*time.Second, &amp;amp;val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 从缓存中检索出key为someKey的缓存对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res, err := cache.Value(&amp;quot;someKey&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if err == nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&amp;quot;Found value in cache:&amp;quot;, res.Data().(*myStruct).text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&amp;quot;Error retrieving value from cache:&amp;quot;, err)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 等待6秒使someKey对象自动失效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.Sleep(6 * time.Second)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res, err = cache.Value(&amp;quot;someKey&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if err != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&amp;quot;Item is not cached (anymore).&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 添加key为someKey的对象缓存周期为0，表示永不过期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache.Add(&amp;quot;someKey&amp;quot;, 0, &amp;amp;val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // cache2go支持一些回调和加载机制&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache.SetAboutToDeleteItemCallback(func(e *cache2go.CacheItem) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fmt.Println(&amp;quot;Deleting:&amp;quot;, e.Key(), e.Data().(*myStruct).text, e.CreatedOn())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 从cache缓存中移除someKey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache.Delete(&amp;quot;someKey&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 清空整个cache缓存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache.Flush()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行结果&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ go run mycachedapp.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Found value in cache: This is a test!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Item is not cached (anymore).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Deleting: someKey This is a test! 2016-04-29 14:20:04.758864028 +0800 CST&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;cache2go介绍&quot;&gt;&lt;a href=&quot;#cache2go介绍&quot; class=&quot;headerlink&quot; title=&quot;cache2go介绍&quot;&gt;&lt;/a&gt;cache2go介绍&lt;/h3&gt;&lt;p&gt;cache2go是golang的一个对象缓存库，可设置对象的缓存周
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/programming/"/>
    
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>cache2go源码分析(二):cache2go缓存表和缓存项</title>
    <link href="http://yoursite.com/2016/04/27/cache2go%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90(%E4%BA%8C):cache2go%E7%BC%93%E5%AD%98%E8%A1%A8%E5%92%8C%E7%BC%93%E5%AD%98%E9%A1%B9/"/>
    <id>http://yoursite.com/2016/04/27/cache2go源码分析(二):cache2go缓存表和缓存项/</id>
    <published>2016-04-27T12:38:27.000Z</published>
    <updated>2016-05-24T10:31:39.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;h3 id=&quot;cache2go源码结构&quot;&gt;&lt;a href=&quot;#cache2go源码结构&quot; class=&quot;headerlink&quot; title=&quot;cache2go源码结构&quot;&gt;&lt;/a&gt;cache2go源码结构&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;├── LICENSE.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── README.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── benchmark_test.go // 压力测试程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── cache.go       // 缓存对象创建&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── cache_test.go  // 测试程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── cacheitem.go   // 缓存项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── cachetable.go  // 缓存表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── errors.go  // 自定义错误&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── examples  // 用法案例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── callbacks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── callbacks.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ├── dataloader&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    │   └── dataloader.go&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    └── mycachedapp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        └── mycachedapp.go&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;缓存表结构体&quot;&gt;&lt;a href=&quot;#缓存表结构体&quot; class=&quot;headerlink&quot; title=&quot;缓存表结构体&quot;&gt;&lt;/a&gt;缓存表结构体&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;缓存表是一个map结构，key为表名，value为CacheItem缓存对象&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 缓存表结构体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type CacheTable struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 读写锁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sync.RWMutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存表名称&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存表中的缓存项&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    items map[interface&amp;#123;&amp;#125;]*CacheItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存表清理定时器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cleanupTimer *time.Timer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存表清理定时器时间间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cleanupInterval time.Duration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存表日志对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logger *log.Logger&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 回调方法：当获取一个不存在的缓存对象key时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loadData func(key interface&amp;#123;&amp;#125;, args ...interface&amp;#123;&amp;#125;) *CacheItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 回调方法：当添加一个缓存对象到缓存表中时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addedItem func(item *CacheItem)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 回调方法：当删除一个对象从缓存表中时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aboutToDeleteItem func(item *CacheItem)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;缓存项结构体&quot;&gt;&lt;a href=&quot;#缓存项结构体&quot; class=&quot;headerlink&quot; title=&quot;缓存项结构体&quot;&gt;&lt;/a&gt;缓存项结构体&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cacheitem.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 缓存项结构体&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type CacheItem struct &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 读写锁&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sync.RWMutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存项key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    key interface&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存项数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data interface&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存项生命周期，0表示永不失效&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lifeSpan time.Duration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存项创建时间戳&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    createdOn time.Time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存项访问的时间戳&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    accessedOn time.Time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存访问次数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    accessCount int64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 回调方法：当缓存项被移除时触发&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aboutToExpire func(key interface&amp;#123;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建缓存表对象&quot;&gt;&lt;a href=&quot;#创建缓存表对象&quot; class=&quot;headerlink&quot; title=&quot;创建缓存表对象&quot;&gt;&lt;/a&gt;创建缓存表对象&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cache.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache = make(map[string]*CacheTable)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutex sync.RWMutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 返回一个缓存表对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func Cache(table string) *CacheTable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 创建一个新的缓存表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutex.RLock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t, ok := cache[table]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mutex.RUnlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 如果创建不成功则实例化CacheTable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if !ok &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t = &amp;amp;CacheTable&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name:  table,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            items: make(map[interface&amp;#123;&amp;#125;]*CacheItem),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mutex.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cache[table] = t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mutex.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return t&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;添加缓存对象&quot;&gt;&lt;a href=&quot;#添加缓存对象&quot; class=&quot;headerlink&quot; title=&quot;添加缓存对象&quot;&gt;&lt;/a&gt;添加缓存对象&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 添加一个缓存对象到缓存表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 参数key：缓存项的key，通过key可以找到对应的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 参数liftSpan：缓存项生命周期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 参数data：缓存项的value（数据）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 返回：缓存对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (table *CacheTable) Add(key interface&amp;#123;&amp;#125;, lifeSpan time.Duration, data interface&amp;#123;&amp;#125;) *CacheItem &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item := CreateCacheItem(key, lifeSpan, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Add item to cache.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.log(&amp;quot;Adding item with key&amp;quot;, key, &amp;quot;and lifespan of&amp;quot;, lifeSpan, &amp;quot;to table&amp;quot;, table.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.items[key] = &amp;amp;item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Cache values so we don&amp;apos;t keep blocking the mutex.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expDur := table.cleanupInterval&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addedItem := table.addedItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 触发回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if addedItem != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addedItem(&amp;amp;item)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 缓存项生命周期大于0则执行缓存项生命周期检查定时器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if lifeSpan &amp;gt; 0 &amp;amp;&amp;amp; (expDur == 0 || lifeSpan &amp;lt; expDur) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.expirationCheck()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &amp;amp;item&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;./cache2go/cacheitem.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 创建一个缓存项对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 参数key：缓存项的key，通过key可以找到对应的数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 参数liftSpan：缓存项周期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 参数data：缓存项的value（数据）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func CreateCacheItem(key interface&amp;#123;&amp;#125;, lifeSpan time.Duration, data interface&amp;#123;&amp;#125;) CacheItem &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    t := time.Now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return CacheItem&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key:           key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lifeSpan:      lifeSpan,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        createdOn:     t,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessedOn:    t,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessCount:   0,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aboutToExpire: nil,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        data:          data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;设置删除时回调&quot;&gt;&lt;a href=&quot;#设置删除时回调&quot; class=&quot;headerlink&quot; title=&quot;设置删除时回调&quot;&gt;&lt;/a&gt;设置删除时回调&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 删除时回调：当删除一个缓存对象时回调该方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (table *CacheTable) SetAboutToDeleteItemCallback(f func(*CacheItem)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer table.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.aboutToDeleteItem = f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;删除缓存对象&quot;&gt;&lt;a href=&quot;#删除缓存对象&quot; class=&quot;headerlink&quot; title=&quot;删除缓存对象&quot;&gt;&lt;/a&gt;删除缓存对象&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 删除一个缓存项从缓存表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (table *CacheTable) Delete(key interface&amp;#123;&amp;#125;) (*CacheItem, error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.RLock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r, ok := table.items[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if !ok &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.RUnlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return nil, ErrKeyNotFound&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Cache value so we don&amp;apos;t keep blocking the mutex.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    aboutToDeleteItem := table.aboutToDeleteItem&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.RUnlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Trigger callbacks before deleting an item from cache.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 触发回调函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if aboutToDeleteItem != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aboutToDeleteItem(r)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.RLock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer r.RUnlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if r.aboutToExpire != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r.aboutToExpire(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer table.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.log(&amp;quot;Deleting item with key&amp;quot;, key, &amp;quot;created on&amp;quot;, r.createdOn, &amp;quot;and hit&amp;quot;, r.accessCount, &amp;quot;times from table&amp;quot;, table.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delete(table.items, key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return r, nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;清空所有缓存对象&quot;&gt;&lt;a href=&quot;#清空所有缓存对象&quot; class=&quot;headerlink&quot; title=&quot;清空所有缓存对象&quot;&gt;&lt;/a&gt;清空所有缓存对象&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 删除所有缓存项从缓存表中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (table *CacheTable) Flush() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer table.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.log(&amp;quot;Flushing table&amp;quot;, table.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.items = make(map[interface&amp;#123;&amp;#125;]*CacheItem)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.cleanupInterval = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if table.cleanupTimer != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.cleanupTimer.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;缓存项失效定时器实现&quot;&gt;&lt;a href=&quot;#缓存项失效定时器实现&quot; class=&quot;headerlink&quot; title=&quot;缓存项失效定时器实现&quot;&gt;&lt;/a&gt;缓存项失效定时器实现&lt;/h3&gt;&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;每次从缓存表中取值时会执行KeepAlive函数，更新accessedOn和accessCount字段，用于判断当前缓存项是否过期&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if ok &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Update access counter and timestamp.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    r.KeepAlive()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return r, nil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;./cache2go/cacheitem.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 更新缓存项访问的时间戳并访问次数+1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (item *CacheItem) KeepAlive() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defer item.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item.accessedOn = time.Now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item.accessCount++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;./cache2go/cachetable.go&lt;/em&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 缓存项生命周期检查定时器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;func (table *CacheTable) expirationCheck() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if table.cleanupTimer != nil &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.cleanupTimer.Stop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if table.cleanupInterval &amp;gt; 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.log(&amp;quot;Expiration check triggered after&amp;quot;, table.cleanupInterval, &amp;quot;for table&amp;quot;, table.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.log(&amp;quot;Expiration check installed for table&amp;quot;, table.name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Cache value so we don&amp;apos;t keep blocking the mutex.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    items := table.items&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // To be more accurate with timers, we would need to update &amp;apos;now&amp;apos; on every&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // loop iteration. Not sure it&amp;apos;s really efficient though.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 判断缓存项是否过期&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 使用当前时间戳(now) 减去 缓存项最新访问的时间戳(accessedOn)得到的时间如果大于等于缓存项的缓存周期则说明该缓存项已经过期，删除该key。否则获取下一次清理的时间间隔(smallestDuration)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    now := time.Now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    smallestDuration := 0 * time.Second&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for key, item := range items &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Cache values so we don&amp;apos;t keep blocking the mutex.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        item.RLock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lifeSpan := item.lifeSpan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessedOn := item.accessedOn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        item.RUnlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if lifeSpan == 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if now.Sub(accessedOn) &amp;gt;= lifeSpan &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Item has excessed its lifespan.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            table.Delete(key)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // Find the item chronologically closest to its end-of-lifespan.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if smallestDuration == 0 || lifeSpan &amp;lt; smallestDuration &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                smallestDuration = lifeSpan - now.Sub(accessedOn)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 设置下一次清理的时间间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.cleanupInterval = smallestDuration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if smallestDuration &amp;gt; 0 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        table.cleanupTimer = time.AfterFunc(smallestDuration, func() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            go table.expirationCheck()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    table.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h3 id=&quot;cache2go源码结构&quot;&gt;&lt;a href=&quot;#cache2go源码结构&quot; class=&quot;headerlink&quot; title=&quot;cache2go源码结构&quot;&gt;&lt;/a&gt;cache2go源码结构&lt;/h3&gt;&lt;figure class=&quot;highlight pla
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/programming/"/>
    
    
      <category term="golang" scheme="http://yoursite.com/tags/golang/"/>
    
  </entry>
  
</feed>
